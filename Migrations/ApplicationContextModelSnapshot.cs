// <auto-generated />
using System;
using API_Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Project.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API_Project.Models.Interest", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("interest");
                });

            modelBuilder.Entity("API_Project.Models.InterestsLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Interestid")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Personid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Interestid");

                    b.HasIndex("Personid");

                    b.ToTable("InterestsLink");
                });

            modelBuilder.Entity("API_Project.Models.Person", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("phoneNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("person");
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.Property<int>("Interestsid")
                        .HasColumnType("int");

                    b.Property<int>("Peopleid")
                        .HasColumnType("int");

                    b.HasKey("Interestsid", "Peopleid");

                    b.HasIndex("Peopleid");

                    b.ToTable("InterestPerson");
                });

            modelBuilder.Entity("API_Project.Models.InterestsLink", b =>
                {
                    b.HasOne("API_Project.Models.Interest", null)
                        .WithMany("InterestsLinks")
                        .HasForeignKey("Interestid");

                    b.HasOne("API_Project.Models.Person", null)
                        .WithMany("InterestsLinks")
                        .HasForeignKey("Personid");
                });

            modelBuilder.Entity("InterestPerson", b =>
                {
                    b.HasOne("API_Project.Models.Interest", null)
                        .WithMany()
                        .HasForeignKey("Interestsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_Project.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("Peopleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API_Project.Models.Interest", b =>
                {
                    b.Navigation("InterestsLinks");
                });

            modelBuilder.Entity("API_Project.Models.Person", b =>
                {
                    b.Navigation("InterestsLinks");
                });
#pragma warning restore 612, 618
        }
    }
}
